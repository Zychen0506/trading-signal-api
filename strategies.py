# === strategies.py ===

from typing import Tuple, Dict, Any

# ç­–ç•¥åŸºåº•é¡žåˆ¥
class BaseStrategy:
    def evaluate(self, data: Dict[str, Any]) -> Tuple[str, int, Dict[str, int]]:
        raise NotImplementedError("Each strategy must implement the evaluate method")

# === BTC ç­–ç•¥ ===
class BTCStrategy(BaseStrategy):
    def evaluate(self, data):
        price = data.get("price", 0)
        confidence = data.get("confidence", 0)
        rsi = data.get("rsi", 0)
        macd = data.get("macd", 0)
        kd = data.get("kd", 0)
        bollinger = data.get("bollinger", 0)
        ma = data.get("ma", 0)
        fib = data.get("fib", 0)

        message = f"ðŸš€ BTCUSDT æ¯”ç‰¹å¹£è¨Šè™Ÿ\n"
        message += f"ðŸ“Š ä¿¡å¿ƒæŒ‡æ•¸ï¼š{confidence} åˆ†\n"
        message += f"RSIï¼š{rsi} åˆ†\nMACDï¼š{macd} åˆ†\nKDï¼š{kd} åˆ†\n"
        message += f"Bollingerï¼š{bollinger} åˆ†\nMAï¼š{ma} åˆ†\nFibonacciï¼š{fib} åˆ†\n"
        message += f"ðŸŽ¯ åƒ¹æ ¼ï¼š{price}"

        score_detail = {
            "rsi": rsi,
            "macd": macd,
            "kd": kd,
            "bollinger": bollinger,
            "ma": ma,
            "fib": fib
        }

        return message, confidence, score_detail

# === XAU ç­–ç•¥ ===
class XAUStrategy(BaseStrategy):
    def evaluate(self, data):
        price = data.get("price", 0)
        confidence = data.get("confidence", 0)
        rsi = data.get("rsi", 0)
        macd = data.get("macd", 0)
        kd = data.get("kd", 0)
        bollinger = data.get("bollinger", 0)
        ma = data.get("ma", 0)
        fib = data.get("fib", 0)

        message = f"ðŸª™ XAUUSD é»ƒé‡‘è¨Šè™Ÿ\n"
        message += f"ðŸ“Š ä¿¡å¿ƒæŒ‡æ•¸ï¼š{confidence} åˆ†\n"
        message += f"RSIï¼š{rsi} åˆ†\nMACDï¼š{macd} åˆ†\nKDï¼š{kd} åˆ†\n"
        message += f"Bollingerï¼š{bollinger} åˆ†\nMAï¼š{ma} åˆ†\nFibonacciï¼š{fib} åˆ†\n"
        message += f"ðŸŽ¯ åƒ¹æ ¼ï¼š{price}"

        score_detail = {
            "rsi": rsi,
            "macd": macd,
            "kd": kd,
            "bollinger": bollinger,
            "ma": ma,
            "fib": fib
        }

        return message, confidence, score_detail

# === è¨»å†Šä¸­å¿ƒ ===
STRATEGY_MAP = {
    "BTCUSDT": BTCStrategy(),
    "XAUUSD": XAUStrategy(),
}

def get_strategy(symbol: str):
    return STRATEGY_MAP.get(symbol.upper())
